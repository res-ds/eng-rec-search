[project]
name = "data-processing"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    "databricks-sdk>=0.33.0",
    "databricks-vectorsearch>=0.40",
    "databricks-sql-connector<=3.4.0",
    "openai>=1.50.2",
    "instructor>=1.5.0",
    "pyspark>=3.5.3",
    "databricks-connect==15.1.*",
]

[tool.uv]
dev-dependencies = [
    "poethepoet>=0.29.0",
    "ruff>=0.6.8",
    "mypy>=1.11.2",
    "pytest>=8.3.3",
]

[tool.ruff]
line-length = 120
target-version = "py310"
show-fixes = true

[tool.ruff.lint]
select = ["A", "E", "F", "UP", "I", "W", "SIM", "RUF", "C901", ]
ignore = ["A002", "A003", "RUF012", ]
exclude = [".venv", "__ignore__"]

[tool.mypy]
python_version = "3.10"
ignore_missing_imports = true
disallow_untyped_defs = true
exclude = "tests|.venv|__ignore__"

[tool.pytest.ini_options]
filterwarnings = ["error", ]

[tool.coverage.run]
source = ["src", ]

[tool.poe.tasks]
[tool.poe.tasks.lint]
help = "Lints the files"
sequence = [
    { cmd = "uv run ruff format ." },
    { cmd = "uv run ruff check . --fix" },
    { cmd = "uv run python -m mypy ." },
]

[tool.poe.tasks.test]
help = "Run unit tests"
sequence = [
    { cmd = "uv run python -m pytest ./tests" },
]

[tool.poe.tasks.all]
help = "Run all required pre-push commands"
sequence = [{ ref = "lint" }, { ref = "test" }]
